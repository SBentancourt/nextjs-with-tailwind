import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Box from '@mui/material/Box';
import Input from '@mui/material/Input';
import {FormControl, FormHelperText, InputLabel} from '@mui/material'
import { useEffect, useState } from 'react';
import Post from '../components/posts';
import { usePosts } from '../hooks/usePosts'
import useDebounce from '../hooks/useDebounce'

export default function Home() {
  const [isWrongNumber, setIsWrongNumber] = useState(false)

  const [userId, setUserId] = useState('')
  const debouncedUserId = useDebounce(userId, 5000)

  const inputFilter = (e) => {
    setIsWrongNumber(false)
    if (e.target.value >= 0) {
      setUserId(e.target.value)
    } else {
      setIsWrongNumber(true)
    }
  }

  const {data: posts, error} = usePosts(userId)

  return (
    <div className='py-0 px-8 bg-gradient-to-b from-blue-100 to-blue-700'>
      <Head>
        <title>Next App with Tailwind</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className='flex py-16 px-0 flex-1 flex-col justify-center items-center'>
        <h1 className='m-0 leading-tight text-6xl text-center'> Random Posts with 
          <a className='text-blue-700 no-underline hover:underline ml-4' href="https://tailwindcss.com/">Tailwind CSS!</a> 
        </h1>

        {/* Filter */}
        <div className='flex flex-row w-full justify-end mt-5'>
          <div>
            <FormControl variant='standard' 
              error={isWrongNumber} 
              color="info" 
              sx={{
                paddingRight: 1
              }}>
              <InputLabel className='text-[15px]' htmlFor='input-filter'>User ID</InputLabel>
              <Input 
                id="input-filter"
                error={isWrongNumber} 
                onChange={inputFilter}
                size='small'
                />
                <FormHelperText className='text-[12px] font-bold text-slate-900'> Filter by User ID </FormHelperText>
            </FormControl>
          </div>
        </div>

        {/* Posts Grid */}

        <div className='grid grid-cols-2 gap-2'>
          {!!posts && posts.length > 0 && posts.map((post) => (
            <Post post={post} key={post.id}/>
          ))}   
        </div>
        
      </main>
    </div>
  )
}